// Preliminary fitting code for gain distributions 
// Sam Grant - April 2019
// samuel.grant.18@ucl.ac.uk

#include <iostream>
#include "TF1.h"
#include "TCanvas.h"
#include "TFile.h"

using namespace std;


double gain_sag(double *x, double *par) {
  
  double time = x[0];
  double N0 = par[0]; // Overall normalisation
  double p0 = par[1];//0.5; // Amplitude of the sag;
  double tau_mu = par[2];//12; // Time constant of the rising exponential
  double tau_r = par[3];//10; // Time constant for the fall exponetial

  double N  = N0 * ( 1 - p0 * ( exp( - time / tau_mu ) - exp( - time / tau_r ) ) );
  return N;
  
}

int main() {

  TFile *input = TFile::Open("gain_uncorrected_new.root");
  
  const int earlyTime = 4.2*50;
  // Fit function with 4 paramters 
  TF1 *f1 = new TF1("f1", gain_sag, 0, earlyTime, 4); 
  f1->SetNpx(1000);

  

  
  





  

  return 0; 
}



