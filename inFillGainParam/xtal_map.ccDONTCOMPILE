// Sam Grant - April 2019
// samuel.grant.18@ucl.ac.uk
// Draw pulls per xtal on a map of the calo face
// Y axis needed reversing 

#include <iostream>
#include "TF1.h"
#include "TH1D.h"
#include "TCanvas.h"
#include "TFile.h"
#include "TStyle.h"
#include "TLegend.h"

using namespace std;

int main() {
  string input_fname;
  bool quality = true;
  if (quality) input_fname = "taus_time_normalised_xtal_Q.root";
  else if (!quality) input_fname = "taus_time_normalised_xtal_noQ.root";
  TFile *input = TFile::Open(input_fname.c_str());
  TCanvas *c1  = new TCanvas();    
  c1->Divide(9,6);

  for (int stn = 13 ; stn < 20 ; stn = stn + 6 ) {
    for( int x = 0 ; x < 9 ; x++ ) {
      for( int y = 0 ; y < 6 ; y++) {
	int xtal = x+9*y;
	cout << xtal << endl;
	string name = "St"+to_string(stn)+"_fit_Ep_vs_t_early_"+to_string(xtal);
	// Change input if need be
	TH1D *hist = (TH1D*)input->Get(name.c_str());
	if(hist==0) continue;
	c1->cd(xtal+1);
        // Get fit
	TF1 *fit = (TF1*)hist->GetFunction("f1");
      // Get parameters
	amp = fit->GetParameter(1);
	amp_err = fit->GetParError(1);
	tau = fit->GetParameter(2);
	tau_err = fit->GetParError(2);
      
	h1->SetTitle((to_string(xtal)).c_str());
      	h1->SetTitleSize(5,"t");
	h1->Draw();
      
      }
    }

    string fname = "St"+to_string(stn)+"_Ep_means_gauss.eps";
    c1->SaveAs(fname.c_str());
    delete c1;
  }

  return 0;
}
