// Convert 2D histograms of E/p vs time into x-profiles for fitting // Sam Grant // March 2020// samuel.grant.18@ucl.ac.uk#include <iostream>#include "FitGausSlices.h"#include "FitLanGausSlices.h"#include "FitDoubleGausSlices.h"// #include "CMAP.h"#include "TFile.h"#include "TCanvas.h"#include "TH1D.h"#include "TH2D.h"#include "TStyle.h"#include "TAxis.h"#include "TProfile.h"#include "TF1.h"#include "TDirectory.h"#include "TObject.h"#include "TGraph.h"#include "TLegend.h"#include "TPaveStats.h"using namespace std;int main() {  // Take command line input for dataset used  string dataset;  bool goodInput = false;  cout << "Enter run-1 dataset: 60h 9d HK EG\n";  cin >> dataset;  if (dataset == "60h" || dataset == "9d" || dataset == "HK" || dataset == "EG") {      cout << "Starting\n" << endl;  } else {     cout<<"Invalid dataset, stopping"<<endl;  }  int gm2Periods = 50;  bool laser = false;  string fitName;  string fitMode;  cout << "Select fit mode: '1' (SingleGaus) '2' (DoubleGaus) '3' (LanGaus)\n";  cin >> fitName;  if (fitName == "1") {    fitMode = "SingleGaus";    cout << "Using fitMode: "<< fitMode << "\nStarting\n" << endl;   } else if(fitName == "2") {    fitMode = "DoubleGaus";    cout << "Using fitMode: "<< fitMode << "\nStarting\n" << endl;  } else if(fitName == "3") {    fitMode = "LanGaus";    cout << "Using fitMode: "<< fitMode << "\nStarting\n" << endl;  } else {    cout<<"Invalid fitmode, stopping"<<endl;    exit(0);  }  string inputName = "../plots/"+dataset+"/trackAndTrackCaloPlots_"+dataset+".root";  string outputName = "../plots/"+dataset+"/plotsEpTimeXtal_"+fitMode+"_"+dataset+".root";  TFile *input = TFile::Open(inputName.c_str());  TFile *output = new TFile(outputName.c_str() , "RECREATE");  cout << "Reading: " << inputName << " " << input << endl;  // Gain correction loop    for (int iCorr = 0; iCorr < 2; iCorr++) {        string corr;      if(iCorr == 0) corr = "GainCorr";      else if(iCorr == 1) corr = "PreGainCorr";      else {        cout<<"*******Error*******"<<endl;        return 0;      }        cout<<corr<<" "<<iCorr<<endl;            for (int stn = 12; stn < 19; stn = stn + 6) {           string dir2 = corr+"/S"+to_string(stn)+"/profiles";        output->cd();        output->mkdir(dir2.c_str());      	   for (int xtal = 0 ; xtal < 54 ; xtal++) {  	          string histName;        if(laser && iCorr==0) histName = "St"+to_string(stn)+"_EoverP_vs_time_withLaser_"+to_string(xtal);        else if(laser && iCorr==1) histName = "St"+to_string(stn)+"_uncorrEoverP_vs_time_withLaser_"+to_string(xtal); // "Positronslaser/Station["+to_string(stn)+"]/EoverPvsTimePreGainCorr";        else if(!laser && iCorr==0) histName = "St"+to_string(stn)+"_EoverP_vs_time_"+to_string(xtal);        else if(!laser && iCorr==1) histName = "St"+to_string(stn)+"_uncorrEoverP_vs_time_"+to_string(xtal);        else {          cout<<"*******Error*******"<<endl;          return 0;        }            TH2D *hist = (TH2D*)input->Get(histName.c_str());        if(hist==0) {           cout<<"XTAL "+to_string(xtal)+"\t"<<"NOT FOUND"<<endl;          continue;        }        string dir1 = corr+"/S"+to_string(stn)+"/sliceFits/xtal/"+to_string(xtal);        output->mkdir(dir1.c_str());        if(fitMode=="SingleGaus") FitGausSlices(hist, "EoverPvsTimeXtal_"+to_string(xtal), "SingleGausCalo", dir1, dir2, output);        else if(fitMode=="DoubleGaus") FitDoubleGausSlices(hist, "EoverPvsTimeXtal_"+to_string(xtal), "DoubleGausCalo", dir1, dir2, output);        else if(fitMode=="LanGaus") FitLanGausSlices(hist, "EoverPvsTimeXtal_"+to_string(xtal), "LanGausCalo", dir1, dir2, output);        else {           cout<<"************************ ERROR: INVALID DATASET ************************"<<endl;            exit(0);        }      }     }  }    output->Write();  output->Close();  input->Close();    cout << "\nCreated: " << outputName << " " << output << endl;  return 0;}